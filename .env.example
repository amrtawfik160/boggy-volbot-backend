# ==============================================================================
# ENVIRONMENT CONFIGURATION
# ==============================================================================
# Copy this file to .env and fill in the required values
# Required variables depend on the environment (development/staging/production)
# ==============================================================================

# ------------------------------------------------------------------------------
# Core Application Settings
# ------------------------------------------------------------------------------
NODE_ENV=development                    # Options: development, staging, production, test
API_PORT=3001                          # Port for the API server (default: 3001)

# ------------------------------------------------------------------------------
# Supabase Configuration (REQUIRED in production)
# ------------------------------------------------------------------------------
# Supabase is used for authentication, database, and storage
# Get these from: https://app.supabase.com/project/YOUR_PROJECT/settings/api
SUPABASE_URL=http://localhost:54321                 # Supabase project URL
SUPABASE_ANON_KEY=your_supabase_anon_key           # Public anon key for client operations
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_key # Service role key for admin operations (KEEP SECRET!)

# ------------------------------------------------------------------------------
# Redis Configuration (REQUIRED in production)
# ------------------------------------------------------------------------------
# Redis is used for Bull queues, rate limiting, and caching
REDIS_URL=redis://localhost:6379       # Redis connection URL

# ------------------------------------------------------------------------------
# Security (REQUIRED in production)
# ------------------------------------------------------------------------------
# Master encryption key for encrypting sensitive data (private keys, etc.)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
# IMPORTANT: Must be at least 32 bytes when base64 decoded
MASTER_ENCRYPTION_KEY=your_base64_encoded_32byte_key

# ------------------------------------------------------------------------------
# Solana RPC Configuration (Optional)
# ------------------------------------------------------------------------------
# If not provided, uses public Solana RPC endpoints (rate limited)
# For production, use a dedicated RPC provider (Helius, QuickNode, etc.)
SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
RPC_ENDPOINT=https://api.mainnet-beta.solana.com
RPC_WEBSOCKET_ENDPOINT=wss://api.mainnet-beta.solana.com

# ------------------------------------------------------------------------------
# CORS Configuration (Optional)
# ------------------------------------------------------------------------------
CORS_ORIGIN=*                          # CORS origin for API (use specific domain in production)

# ------------------------------------------------------------------------------
# Trading Configuration Defaults (Optional)
# ------------------------------------------------------------------------------
# These can be overridden per campaign via the API
# All amounts are in SOL
BUY_LOWER_AMOUNT=0.001                 # Minimum buy amount per transaction (SOL)
BUY_UPPER_AMOUNT=0.002                 # Maximum buy amount per transaction (SOL)
BUY_INTERVAL_MIN=2000                  # Minimum interval between buys (milliseconds)
BUY_INTERVAL_MAX=4000                  # Maximum interval between buys (milliseconds)
DISTRIBUTE_WALLET_NUM=5                # Default number of wallets for distribution
SELL_ALL_BY_TIMES=1                    # Number of transactions to split sells into

# ------------------------------------------------------------------------------
# Jito Configuration (Optional)
# ------------------------------------------------------------------------------
# Jito block engine for MEV protection and transaction bundling
JITO_KEY=your_jito_auth_keypair        # Jito authentication keypair (base58 encoded)
BLOCKENGINE_URL=https://mainnet.block-engine.jito.wtf  # Jito block engine URL
JITO_FEE=0.0001                        # Jito tip amount (SOL)

# ------------------------------------------------------------------------------
# Transaction Fees (Optional)
# ------------------------------------------------------------------------------
TX_FEE=0.000005                        # Base transaction fee (SOL)
ADDITIONAL_FEE=0.0                     # Additional fee for priority (SOL)

# ------------------------------------------------------------------------------
# Worker Configuration (Optional)
# ------------------------------------------------------------------------------
STATUS_AGGREGATOR_INTERVAL_SECONDS=15  # Status aggregation interval (seconds)

# ------------------------------------------------------------------------------
# Sentry Error Tracking (Optional - for production error monitoring)
# ------------------------------------------------------------------------------
# Get DSN from: https://sentry.io/settings/YOUR_ORG/projects/YOUR_PROJECT/keys/
SENTRY_DSN=                                # Sentry DSN for error tracking
SENTRY_ENVIRONMENT=development              # Environment tag for Sentry (development, staging, production)
SENTRY_TRACES_SAMPLE_RATE=0.1              # Percentage of transactions to trace (0.0 - 1.0)

# ------------------------------------------------------------------------------
# OpenTelemetry Distributed Tracing (Optional - for advanced observability)
# ------------------------------------------------------------------------------
# OpenTelemetry provides distributed tracing across your services
# Traces are automatically exported to Sentry (if SENTRY_DSN is set) and/or OTLP collectors
OTEL_ENABLED=true                          # Enable/disable OpenTelemetry tracing (default: true)
OTEL_SERVICE_NAME=volume-bot-api           # Service name for traces (default: volume-bot-api)
OTEL_EXPORTER_OTLP_ENDPOINT=               # OTLP collector endpoint (e.g., http://localhost:4318 for Jaeger/Tempo)
OTEL_EXPORTER_OTLP_HEADERS=                # Optional headers for OTLP (e.g., "api-key=value,key2=value2")

# ------------------------------------------------------------------------------
# Task Master AI API Keys (Optional - for development task management)
# ------------------------------------------------------------------------------
ANTHROPIC_API_KEY="your_anthropic_api_key_here"       # Required: Format: sk-ant-api03-...
PERPLEXITY_API_KEY="your_perplexity_api_key_here"     # Optional: Format: pplx-...
OPENAI_API_KEY="your_openai_api_key_here"             # Optional, for OpenAI models. Format: sk-proj-...
GOOGLE_API_KEY="your_google_api_key_here"             # Optional, for Google Gemini models.
MISTRAL_API_KEY="your_mistral_key_here"               # Optional, for Mistral AI models.
XAI_API_KEY="YOUR_XAI_KEY_HERE"                       # Optional, for xAI AI models.
GROQ_API_KEY="YOUR_GROQ_KEY_HERE"                     # Optional, for Groq models.
OPENROUTER_API_KEY="YOUR_OPENROUTER_KEY_HERE"         # Optional, for OpenRouter models.
AZURE_OPENAI_API_KEY="your_azure_key_here"            # Optional, for Azure OpenAI models.
OLLAMA_API_KEY="your_ollama_api_key_here"             # Optional: For remote Ollama servers.
GITHUB_API_KEY="your_github_api_key_here"             # Optional: For GitHub features. Format: ghp_...

# ==============================================================================
# SECRETS MANAGEMENT RECOMMENDATIONS
# ==============================================================================
# For production deployments, consider using a secrets management service:
# - AWS Secrets Manager: https://aws.amazon.com/secrets-manager/
# - Doppler: https://www.doppler.com/
# - HashiCorp Vault: https://www.vaultproject.io/
# - Infisical: https://infisical.com/
#
# Never commit .env files with real credentials to version control!
# ==============================================================================