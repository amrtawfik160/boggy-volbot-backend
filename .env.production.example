# ==============================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# ==============================================================================
# Copy this file to .env for production deployment
# ==============================================================================

# ------------------------------------------------------------------------------
# Environment
# ------------------------------------------------------------------------------
NODE_ENV=production
VERSION=1.0.0

# ------------------------------------------------------------------------------
# API Configuration
# ------------------------------------------------------------------------------
API_PORT=3001
CORS_ORIGIN=https://yourdomain.com

# ------------------------------------------------------------------------------
# Redis Configuration
# ------------------------------------------------------------------------------
# For Docker Compose deployment
REDIS_URL=redis://:STRONG_REDIS_PASSWORD@redis:6379
REDIS_PASSWORD=STRONG_REDIS_PASSWORD
REDIS_PORT=6379

# For managed Redis (Redis Cloud, AWS ElastiCache, etc.)
# REDIS_URL=rediss://username:password@your-redis-host:6380

# ------------------------------------------------------------------------------
# Database Configuration - Supabase (RECOMMENDED)
# ------------------------------------------------------------------------------
SUPABASE_URL=https://xxxxxxxxxxxxx.supabase.co
SUPABASE_ANON_KEY=your_supabase_anon_key_here
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# ------------------------------------------------------------------------------
# Database Configuration - Self-Hosted Postgres (NOT RECOMMENDED)
# ------------------------------------------------------------------------------
# Only use if you're self-hosting Postgres instead of Supabase
# POSTGRES_DB=volumebot
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=STRONG_POSTGRES_PASSWORD
# POSTGRES_PORT=5432
# DATABASE_URL=postgresql://postgres:STRONG_POSTGRES_PASSWORD@postgres:5432/volumebot

# ------------------------------------------------------------------------------
# Security - Master Encryption Key (REQUIRED)
# ------------------------------------------------------------------------------
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
MASTER_ENCRYPTION_KEY=GENERATE_A_SECURE_32_BYTE_BASE64_KEY_HERE

# ------------------------------------------------------------------------------
# Solana RPC Configuration (REQUIRED)
# ------------------------------------------------------------------------------
# Use a dedicated RPC provider for production (Helius, QuickNode, Alchemy, etc.)
SOLANA_RPC_URL=https://mainnet.helius-rpc.com/?api-key=YOUR_API_KEY
RPC_ENDPOINT=https://mainnet.helius-rpc.com/?api-key=YOUR_API_KEY
RPC_WEBSOCKET_ENDPOINT=wss://mainnet.helius-rpc.com/?api-key=YOUR_API_KEY

# ------------------------------------------------------------------------------
# Jito Configuration (Optional but recommended for MEV protection)
# ------------------------------------------------------------------------------
JITO_KEY=your_jito_auth_keypair_base58_encoded
BLOCKENGINE_URL=https://mainnet.block-engine.jito.wtf
JITO_FEE=0.0001

# ------------------------------------------------------------------------------
# Trading Configuration
# ------------------------------------------------------------------------------
BUY_LOWER_AMOUNT=0.001
BUY_UPPER_AMOUNT=0.002
BUY_INTERVAL_MIN=2000
BUY_INTERVAL_MAX=4000
DISTRIBUTE_WALLET_NUM=5
SELL_ALL_BY_TIMES=1
TX_FEE=0.000005
ADDITIONAL_FEE=0.0

# ------------------------------------------------------------------------------
# Worker Configuration
# ------------------------------------------------------------------------------
WORKER_REPLICAS=2
WORKER_CONCURRENCY=5
STATUS_AGGREGATOR_INTERVAL_SECONDS=15

# ------------------------------------------------------------------------------
# Monitoring - Sentry (Recommended for production error tracking)
# ------------------------------------------------------------------------------
SENTRY_DSN=https://xxxxx@o12345.ingest.sentry.io/12345678
SENTRY_ENVIRONMENT=production
SENTRY_TRACES_SAMPLE_RATE=0.1

# ------------------------------------------------------------------------------
# Observability - OpenTelemetry (Optional but recommended)
# ------------------------------------------------------------------------------
OTEL_ENABLED=true
OTEL_SERVICE_NAME=volume-bot-api
# For Jaeger/Tempo/Grafana Cloud
OTEL_EXPORTER_OTLP_ENDPOINT=http://your-otlp-collector:4318
OTEL_EXPORTER_OTLP_HEADERS=

# ==============================================================================
# PRODUCTION SECURITY CHECKLIST
# ==============================================================================
# [ ] Generated strong MASTER_ENCRYPTION_KEY
# [ ] Changed all default passwords (Redis, Postgres if self-hosted)
# [ ] Configured CORS_ORIGIN to specific domain(s)
# [ ] Using dedicated Solana RPC provider (not public endpoints)
# [ ] Configured Sentry for error tracking
# [ ] Set up backups for Redis and Postgres volumes
# [ ] Enabled HTTPS/TLS for external access
# [ ] Reviewed and tested resource limits in docker-compose.prod.yml
# [ ] Configured firewall rules to restrict access
# [ ] Set up monitoring and alerting
# ==============================================================================
